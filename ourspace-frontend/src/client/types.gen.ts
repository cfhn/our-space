// This file is auto-generated by @hey-api/openapi-ts

export type Briefing = {
    id: string;
    briefing_type: string;
};

export type BriefingType = {
    id: string;
    display_name: string;
    description: string;
    expires_after: string;
};

export type CardReadable = {
    readonly id: string;
    member_id: string;
    rfid_value: string;
    valid_from: string;
    valid_to: string;
};

export type CardWritable = {
    member_id: string;
    rfid_value: string;
    valid_from: string;
    valid_to: string;
};

export type CheckinRequest = {
    member_id?: string;
};

export type CheckoutRequest = {
    member_id?: string;
};

/**
 * Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
 */
export type GoogleProtobufAny = {
    /**
     * The type of the serialized message.
     */
    '@type'?: string;
    [key: string]: unknown | string | undefined;
};

export type ListBriefingTypesResponse = {
    briefing_types: Array<BriefingType>;
    next_page_token: string;
};

export type ListBriefingsResponse = {
    briefings?: Array<Briefing>;
    next_page_token?: string;
};

export type ListCardsResponseReadable = {
    cards: Array<CardReadable>;
    next_page_token: string;
};

export type ListCardsResponseWritable = {
    cards: Array<CardWritable>;
    next_page_token: string;
};

export type ListMembersResponseReadable = {
    members: Array<MemberReadable>;
    next_page_token: string;
};

export type ListMembersResponseWritable = {
    members: Array<MemberWritable>;
    next_page_token: string;
};

export type ListPrecensesResponse = {
    presence: Array<Presence>;
    next_page_token: string;
};

export type MemberReadable = {
    readonly id: string;
    name: string;
    membership_start: string;
    membership_end?: string;
    age_category: 'AGE_CATEGORY_UNKNOWN' | 'AGE_CATEGORY_UNDERAGE' | 'AGE_CATEGORY_ADULT';
    tags: Array<string>;
};

export type MemberWritable = {
    name: string;
    membership_start: string;
    membership_end?: string;
    age_category: 'AGE_CATEGORY_UNKNOWN' | 'AGE_CATEGORY_UNDERAGE' | 'AGE_CATEGORY_ADULT';
    tags: Array<string>;
};

export type Presence = {
    id: string;
    member_id: string;
    checkin_time: string;
    checkout_time: string;
};

/**
 * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
 */
export type Status = {
    /**
     * The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
     */
    code?: number;
    /**
     * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
     */
    message?: string;
    /**
     * A list of messages that carry the error details.  There is a common set of message types for APIs to use.
     */
    details?: Array<GoogleProtobufAny>;
};

export type BriefingServiceListBriefingTypesData = {
    body?: never;
    path?: never;
    query?: {
        page_size?: number;
        page_token?: string;
    };
    url: '/v1/briefing-types';
};

export type BriefingServiceListBriefingTypesErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceListBriefingTypesError = BriefingServiceListBriefingTypesErrors[keyof BriefingServiceListBriefingTypesErrors];

export type BriefingServiceListBriefingTypesResponses = {
    /**
     * OK
     */
    200: ListBriefingTypesResponse;
};

export type BriefingServiceListBriefingTypesResponse = BriefingServiceListBriefingTypesResponses[keyof BriefingServiceListBriefingTypesResponses];

export type BriefingServiceCreateBriefingTypeData = {
    body: BriefingType;
    path?: never;
    query?: {
        briefing_type_id?: string;
    };
    url: '/v1/briefing-types';
};

export type BriefingServiceCreateBriefingTypeErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceCreateBriefingTypeError = BriefingServiceCreateBriefingTypeErrors[keyof BriefingServiceCreateBriefingTypeErrors];

export type BriefingServiceCreateBriefingTypeResponses = {
    /**
     * OK
     */
    200: BriefingType;
};

export type BriefingServiceCreateBriefingTypeResponse = BriefingServiceCreateBriefingTypeResponses[keyof BriefingServiceCreateBriefingTypeResponses];

export type BriefingServiceUpdateBriefingTypeData = {
    body: BriefingType;
    path: {
        'briefing_type.id': string;
    };
    query?: {
        field_mask?: string;
    };
    url: '/v1/briefing-types/{briefing_type.id}';
};

export type BriefingServiceUpdateBriefingTypeErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceUpdateBriefingTypeError = BriefingServiceUpdateBriefingTypeErrors[keyof BriefingServiceUpdateBriefingTypeErrors];

export type BriefingServiceUpdateBriefingTypeResponses = {
    /**
     * OK
     */
    200: BriefingType;
};

export type BriefingServiceUpdateBriefingTypeResponse = BriefingServiceUpdateBriefingTypeResponses[keyof BriefingServiceUpdateBriefingTypeResponses];

export type BriefingServiceDeleteBriefingTypeData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/briefing-types/{id}';
};

export type BriefingServiceDeleteBriefingTypeErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceDeleteBriefingTypeError = BriefingServiceDeleteBriefingTypeErrors[keyof BriefingServiceDeleteBriefingTypeErrors];

export type BriefingServiceDeleteBriefingTypeResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type BriefingServiceGetBriefingTypeData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/briefing-types/{id}';
};

export type BriefingServiceGetBriefingTypeErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceGetBriefingTypeError = BriefingServiceGetBriefingTypeErrors[keyof BriefingServiceGetBriefingTypeErrors];

export type BriefingServiceGetBriefingTypeResponses = {
    /**
     * OK
     */
    200: BriefingType;
};

export type BriefingServiceGetBriefingTypeResponse = BriefingServiceGetBriefingTypeResponses[keyof BriefingServiceGetBriefingTypeResponses];

export type BriefingServiceListBriefingsData = {
    body?: never;
    path?: never;
    query?: {
        page_size?: number;
        page_token?: string;
    };
    url: '/v1/briefings';
};

export type BriefingServiceListBriefingsErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceListBriefingsError = BriefingServiceListBriefingsErrors[keyof BriefingServiceListBriefingsErrors];

export type BriefingServiceListBriefingsResponses = {
    /**
     * OK
     */
    200: ListBriefingsResponse;
};

export type BriefingServiceListBriefingsResponse = BriefingServiceListBriefingsResponses[keyof BriefingServiceListBriefingsResponses];

export type BriefingServiceCreateBriefingData = {
    body: Briefing;
    path?: never;
    query?: {
        briefing_id?: string;
    };
    url: '/v1/briefings';
};

export type BriefingServiceCreateBriefingErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceCreateBriefingError = BriefingServiceCreateBriefingErrors[keyof BriefingServiceCreateBriefingErrors];

export type BriefingServiceCreateBriefingResponses = {
    /**
     * OK
     */
    200: Briefing;
};

export type BriefingServiceCreateBriefingResponse = BriefingServiceCreateBriefingResponses[keyof BriefingServiceCreateBriefingResponses];

export type BriefingServiceUpdateBriefingData = {
    body: Briefing;
    path: {
        'briefing.id': string;
    };
    query?: {
        field_mask?: string;
    };
    url: '/v1/briefings/{briefing.id}';
};

export type BriefingServiceUpdateBriefingErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceUpdateBriefingError = BriefingServiceUpdateBriefingErrors[keyof BriefingServiceUpdateBriefingErrors];

export type BriefingServiceUpdateBriefingResponses = {
    /**
     * OK
     */
    200: Briefing;
};

export type BriefingServiceUpdateBriefingResponse = BriefingServiceUpdateBriefingResponses[keyof BriefingServiceUpdateBriefingResponses];

export type BriefingServiceDeleteBriefingData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/briefings/{id}';
};

export type BriefingServiceDeleteBriefingErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceDeleteBriefingError = BriefingServiceDeleteBriefingErrors[keyof BriefingServiceDeleteBriefingErrors];

export type BriefingServiceDeleteBriefingResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type BriefingServiceGetBriefingData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/briefings/{id}';
};

export type BriefingServiceGetBriefingErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type BriefingServiceGetBriefingError = BriefingServiceGetBriefingErrors[keyof BriefingServiceGetBriefingErrors];

export type BriefingServiceGetBriefingResponses = {
    /**
     * OK
     */
    200: Briefing;
};

export type BriefingServiceGetBriefingResponse = BriefingServiceGetBriefingResponses[keyof BriefingServiceGetBriefingResponses];

export type CardServiceListCardsData = {
    body?: never;
    path?: never;
    query?: {
        page_size?: number;
        page_token?: string;
        sort_by?: 'CARD_FIELD_UNKNOWN' | 'CARD_FIELD_ID' | 'CARD_FIELD_MEMBER_ID' | 'CARD_FIELD_VALID_FROM' | 'CARD_FIELD_VALID_TO';
        sort_direction?: 'SORT_DIRECTION_DEFAULT' | 'SORT_DIRECTION_ASCENDING' | 'SORT_DIRECTION_DESCENDING';
        member_id?: string;
        valid_on?: string;
        rfid_value?: string;
    };
    url: '/v1/cards';
};

export type CardServiceListCardsErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type CardServiceListCardsError = CardServiceListCardsErrors[keyof CardServiceListCardsErrors];

export type CardServiceListCardsResponses = {
    /**
     * OK
     */
    200: ListCardsResponseReadable;
};

export type CardServiceListCardsResponse = CardServiceListCardsResponses[keyof CardServiceListCardsResponses];

export type CardServiceCreateCardData = {
    body: CardWritable;
    path?: never;
    query?: {
        card_id?: string;
    };
    url: '/v1/cards';
};

export type CardServiceCreateCardErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type CardServiceCreateCardError = CardServiceCreateCardErrors[keyof CardServiceCreateCardErrors];

export type CardServiceCreateCardResponses = {
    /**
     * OK
     */
    200: CardReadable;
};

export type CardServiceCreateCardResponse = CardServiceCreateCardResponses[keyof CardServiceCreateCardResponses];

export type CardServiceUpdateCardData = {
    body: CardWritable;
    path: {
        'card.id': string;
    };
    query?: {
        field_mask?: string;
    };
    url: '/v1/cards/{card.id}';
};

export type CardServiceUpdateCardErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type CardServiceUpdateCardError = CardServiceUpdateCardErrors[keyof CardServiceUpdateCardErrors];

export type CardServiceUpdateCardResponses = {
    /**
     * OK
     */
    200: CardReadable;
};

export type CardServiceUpdateCardResponse = CardServiceUpdateCardResponses[keyof CardServiceUpdateCardResponses];

export type CardServiceDeleteCardData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/cards/{id}';
};

export type CardServiceDeleteCardErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type CardServiceDeleteCardError = CardServiceDeleteCardErrors[keyof CardServiceDeleteCardErrors];

export type CardServiceDeleteCardResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type CardServiceGetCardData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/cards/{id}';
};

export type CardServiceGetCardErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type CardServiceGetCardError = CardServiceGetCardErrors[keyof CardServiceGetCardErrors];

export type CardServiceGetCardResponses = {
    /**
     * OK
     */
    200: CardReadable;
};

export type CardServiceGetCardResponse = CardServiceGetCardResponses[keyof CardServiceGetCardResponses];

export type MemberServiceListMembersData = {
    body?: never;
    path?: never;
    query?: {
        page_size?: number;
        page_token?: string;
        sort_by?: 'MEMBER_FIELD_UNKNOWN' | 'MEMBER_FIELD_ID' | 'MEMBER_FIELD_NAME' | 'MEMBER_FIELD_MEMBERSHIP_START' | 'MEMBER_FIELD_MEMBERSHIP_END';
        sort_direction?: 'SORT_DIRECTION_DEFAULT' | 'SORT_DIRECTION_ASCENDING' | 'SORT_DIRECTION_DESCENDING';
        name_contains?: string;
        membership_start_after?: string;
        membership_start_before?: string;
        membership_end_after?: string;
        membership_end_before?: string;
        age_category_equals?: 'AGE_CATEGORY_UNKNOWN' | 'AGE_CATEGORY_UNDERAGE' | 'AGE_CATEGORY_ADULT';
        tag_contains?: Array<string>;
    };
    url: '/v1/members';
};

export type MemberServiceListMembersErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type MemberServiceListMembersError = MemberServiceListMembersErrors[keyof MemberServiceListMembersErrors];

export type MemberServiceListMembersResponses = {
    /**
     * OK
     */
    200: ListMembersResponseReadable;
};

export type MemberServiceListMembersResponse = MemberServiceListMembersResponses[keyof MemberServiceListMembersResponses];

export type MemberServiceCreateMemberData = {
    body: MemberWritable;
    path?: never;
    query?: {
        member_id?: string;
    };
    url: '/v1/members';
};

export type MemberServiceCreateMemberErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type MemberServiceCreateMemberError = MemberServiceCreateMemberErrors[keyof MemberServiceCreateMemberErrors];

export type MemberServiceCreateMemberResponses = {
    /**
     * OK
     */
    200: MemberReadable;
};

export type MemberServiceCreateMemberResponse = MemberServiceCreateMemberResponses[keyof MemberServiceCreateMemberResponses];

export type MemberServiceDeleteMemberData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/members/{id}';
};

export type MemberServiceDeleteMemberErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type MemberServiceDeleteMemberError = MemberServiceDeleteMemberErrors[keyof MemberServiceDeleteMemberErrors];

export type MemberServiceDeleteMemberResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type MemberServiceGetMemberData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/members/{id}';
};

export type MemberServiceGetMemberErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type MemberServiceGetMemberError = MemberServiceGetMemberErrors[keyof MemberServiceGetMemberErrors];

export type MemberServiceGetMemberResponses = {
    /**
     * OK
     */
    200: MemberReadable;
};

export type MemberServiceGetMemberResponse = MemberServiceGetMemberResponses[keyof MemberServiceGetMemberResponses];

export type MemberServiceUpdateMemberData = {
    body: MemberWritable;
    path: {
        'member.id': string;
    };
    query?: {
        field_mask?: string;
    };
    url: '/v1/members/{member.id}';
};

export type MemberServiceUpdateMemberErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type MemberServiceUpdateMemberError = MemberServiceUpdateMemberErrors[keyof MemberServiceUpdateMemberErrors];

export type MemberServiceUpdateMemberResponses = {
    /**
     * OK
     */
    200: MemberReadable;
};

export type MemberServiceUpdateMemberResponse = MemberServiceUpdateMemberResponses[keyof MemberServiceUpdateMemberResponses];

export type PresenceServiceListPresencesData = {
    body?: never;
    path?: never;
    query?: {
        page_size?: number;
        page_token?: string;
        /**
         * Filters
         */
        member_id?: string;
        checkin_time_after?: string;
        checkin_time_before?: string;
        checkout_time_after?: string;
        checkout_time_before?: string;
    };
    url: '/v1/presences';
};

export type PresenceServiceListPresencesErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type PresenceServiceListPresencesError = PresenceServiceListPresencesErrors[keyof PresenceServiceListPresencesErrors];

export type PresenceServiceListPresencesResponses = {
    /**
     * OK
     */
    200: ListPrecensesResponse;
};

export type PresenceServiceListPresencesResponse = PresenceServiceListPresencesResponses[keyof PresenceServiceListPresencesResponses];

export type PresenceServiceDeletePresenceData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/v1/presences/{id}';
};

export type PresenceServiceDeletePresenceErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type PresenceServiceDeletePresenceError = PresenceServiceDeletePresenceErrors[keyof PresenceServiceDeletePresenceErrors];

export type PresenceServiceDeletePresenceResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PresenceServiceUpdatePresenceData = {
    body: Presence;
    path: {
        'presence.id': string;
    };
    query?: {
        field_mask?: string;
    };
    url: '/v1/presences/{presence.id}';
};

export type PresenceServiceUpdatePresenceErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type PresenceServiceUpdatePresenceError = PresenceServiceUpdatePresenceErrors[keyof PresenceServiceUpdatePresenceErrors];

export type PresenceServiceUpdatePresenceResponses = {
    /**
     * OK
     */
    200: Presence;
};

export type PresenceServiceUpdatePresenceResponse = PresenceServiceUpdatePresenceResponses[keyof PresenceServiceUpdatePresenceResponses];

export type PresenceServiceCheckinData = {
    body: CheckinRequest;
    path?: never;
    query?: never;
    url: '/v1/presences:checkin';
};

export type PresenceServiceCheckinErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type PresenceServiceCheckinError = PresenceServiceCheckinErrors[keyof PresenceServiceCheckinErrors];

export type PresenceServiceCheckinResponses = {
    /**
     * OK
     */
    200: Presence;
};

export type PresenceServiceCheckinResponse = PresenceServiceCheckinResponses[keyof PresenceServiceCheckinResponses];

export type PresenceServiceCheckoutData = {
    body: CheckoutRequest;
    path?: never;
    query?: never;
    url: '/v1/presences:checkout';
};

export type PresenceServiceCheckoutErrors = {
    /**
     * Default error response
     */
    default: Status;
};

export type PresenceServiceCheckoutError = PresenceServiceCheckoutErrors[keyof PresenceServiceCheckoutErrors];

export type PresenceServiceCheckoutResponses = {
    /**
     * OK
     */
    200: Presence;
};

export type PresenceServiceCheckoutResponse = PresenceServiceCheckoutResponses[keyof PresenceServiceCheckoutResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};