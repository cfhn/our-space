// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: pkg/sse/proto/test.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enum int32

const (
	Enum_ENUM_UNKNOWN Enum = 0
	Enum_ENUM_B       Enum = 1
	Enum_ENUM_C       Enum = 10
)

// Enum value maps for Enum.
var (
	Enum_name = map[int32]string{
		0:  "ENUM_UNKNOWN",
		1:  "ENUM_B",
		10: "ENUM_C",
	}
	Enum_value = map[string]int32{
		"ENUM_UNKNOWN": 0,
		"ENUM_B":       1,
		"ENUM_C":       10,
	}
)

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}

func (x Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_sse_proto_test_proto_enumTypes[0].Descriptor()
}

func (Enum) Type() protoreflect.EnumType {
	return &file_pkg_sse_proto_test_proto_enumTypes[0]
}

func (x Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enum.Descriptor instead.
func (Enum) EnumDescriptor() ([]byte, []int) {
	return file_pkg_sse_proto_test_proto_rawDescGZIP(), []int{0}
}

type TestRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	FloatValue            float32                `protobuf:"fixed32,1,opt,name=float_value,json=floatValue,proto3" json:"float_value,omitempty"`
	DoubleValue           float64                `protobuf:"fixed64,2,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	Int64Value            int64                  `protobuf:"varint,3,opt,name=int64_value,json=int64Value,proto3" json:"int64_value,omitempty"`
	Uint64Value           uint64                 `protobuf:"varint,4,opt,name=uint64_value,json=uint64Value,proto3" json:"uint64_value,omitempty"`
	Int32Value            int32                  `protobuf:"varint,5,opt,name=int32_value,json=int32Value,proto3" json:"int32_value,omitempty"`
	Fixed64Value          uint64                 `protobuf:"fixed64,6,opt,name=fixed64_value,json=fixed64Value,proto3" json:"fixed64_value,omitempty"`
	Fixed32Value          uint32                 `protobuf:"fixed32,7,opt,name=fixed32_value,json=fixed32Value,proto3" json:"fixed32_value,omitempty"`
	BoolValue             bool                   `protobuf:"varint,8,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	StringValue           string                 `protobuf:"bytes,9,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	BytesValue            []byte                 `protobuf:"bytes,10,opt,name=bytes_value,json=bytesValue,proto3" json:"bytes_value,omitempty"`
	Uint32Value           uint32                 `protobuf:"varint,11,opt,name=uint32_value,json=uint32Value,proto3" json:"uint32_value,omitempty"`
	EnumValue             Enum                   `protobuf:"varint,12,opt,name=enum_value,json=enumValue,proto3,enum=pkg.sse.proto.Enum" json:"enum_value,omitempty"`
	Sfixed32Value         int32                  `protobuf:"fixed32,13,opt,name=sfixed32_value,json=sfixed32Value,proto3" json:"sfixed32_value,omitempty"`
	Sfixed64Value         int64                  `protobuf:"fixed64,14,opt,name=sfixed64_value,json=sfixed64Value,proto3" json:"sfixed64_value,omitempty"`
	Sint32Value           int32                  `protobuf:"zigzag32,15,opt,name=sint32_value,json=sint32Value,proto3" json:"sint32_value,omitempty"`
	Sint64Value           int64                  `protobuf:"zigzag64,16,opt,name=sint64_value,json=sint64Value,proto3" json:"sint64_value,omitempty"`
	RepeatedStringValue   []string               `protobuf:"bytes,17,rep,name=repeated_string_value,json=repeatedStringValue,proto3" json:"repeated_string_value,omitempty"`
	RepeatedFloatValue    []float32              `protobuf:"fixed32,18,rep,packed,name=repeated_float_value,json=repeatedFloatValue,proto3" json:"repeated_float_value,omitempty"`
	RepeatedDoubleValue   []float64              `protobuf:"fixed64,19,rep,packed,name=repeated_double_value,json=repeatedDoubleValue,proto3" json:"repeated_double_value,omitempty"`
	RepeatedInt64Value    []int64                `protobuf:"varint,20,rep,packed,name=repeated_int64_value,json=repeatedInt64Value,proto3" json:"repeated_int64_value,omitempty"`
	RepeatedUint64Value   []uint64               `protobuf:"varint,21,rep,packed,name=repeated_uint64_value,json=repeatedUint64Value,proto3" json:"repeated_uint64_value,omitempty"`
	RepeatedInt32Value    []int32                `protobuf:"varint,22,rep,packed,name=repeated_int32_value,json=repeatedInt32Value,proto3" json:"repeated_int32_value,omitempty"`
	RepeatedFixed64Value  []uint64               `protobuf:"fixed64,23,rep,packed,name=repeated_fixed64_value,json=repeatedFixed64Value,proto3" json:"repeated_fixed64_value,omitempty"`
	RepeatedFixed32Value  []uint32               `protobuf:"fixed32,24,rep,packed,name=repeated_fixed32_value,json=repeatedFixed32Value,proto3" json:"repeated_fixed32_value,omitempty"`
	RepeatedBoolValue     []bool                 `protobuf:"varint,25,rep,packed,name=repeated_bool_value,json=repeatedBoolValue,proto3" json:"repeated_bool_value,omitempty"`
	RepeatedBytesValue    [][]byte               `protobuf:"bytes,26,rep,name=repeated_bytes_value,json=repeatedBytesValue,proto3" json:"repeated_bytes_value,omitempty"`
	RepeatedUint32Value   []uint32               `protobuf:"varint,27,rep,packed,name=repeated_uint32_value,json=repeatedUint32Value,proto3" json:"repeated_uint32_value,omitempty"`
	RepeatedEnumValue     []Enum                 `protobuf:"varint,28,rep,packed,name=repeated_enum_value,json=repeatedEnumValue,proto3,enum=pkg.sse.proto.Enum" json:"repeated_enum_value,omitempty"`
	RepeatedSfixed32Value []int32                `protobuf:"fixed32,29,rep,packed,name=repeated_sfixed32_value,json=repeatedSfixed32Value,proto3" json:"repeated_sfixed32_value,omitempty"`
	RepeatedSfixed64Value []int64                `protobuf:"fixed64,30,rep,packed,name=repeated_sfixed64_value,json=repeatedSfixed64Value,proto3" json:"repeated_sfixed64_value,omitempty"`
	RepeatedSint32Value   []int32                `protobuf:"zigzag32,31,rep,packed,name=repeated_sint32_value,json=repeatedSint32Value,proto3" json:"repeated_sint32_value,omitempty"`
	RepeatedSint64Value   []int64                `protobuf:"zigzag64,32,rep,packed,name=repeated_sint64_value,json=repeatedSint64Value,proto3" json:"repeated_sint64_value,omitempty"`
	Jsonnamehandling      string                 `protobuf:"bytes,33,opt,name=jsonnamehandling,json=json_name_handling,proto3" json:"jsonnamehandling,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	mi := &file_pkg_sse_proto_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sse_proto_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_pkg_sse_proto_test_proto_rawDescGZIP(), []int{0}
}

func (x *TestRequest) GetFloatValue() float32 {
	if x != nil {
		return x.FloatValue
	}
	return 0
}

func (x *TestRequest) GetDoubleValue() float64 {
	if x != nil {
		return x.DoubleValue
	}
	return 0
}

func (x *TestRequest) GetInt64Value() int64 {
	if x != nil {
		return x.Int64Value
	}
	return 0
}

func (x *TestRequest) GetUint64Value() uint64 {
	if x != nil {
		return x.Uint64Value
	}
	return 0
}

func (x *TestRequest) GetInt32Value() int32 {
	if x != nil {
		return x.Int32Value
	}
	return 0
}

func (x *TestRequest) GetFixed64Value() uint64 {
	if x != nil {
		return x.Fixed64Value
	}
	return 0
}

func (x *TestRequest) GetFixed32Value() uint32 {
	if x != nil {
		return x.Fixed32Value
	}
	return 0
}

func (x *TestRequest) GetBoolValue() bool {
	if x != nil {
		return x.BoolValue
	}
	return false
}

func (x *TestRequest) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *TestRequest) GetBytesValue() []byte {
	if x != nil {
		return x.BytesValue
	}
	return nil
}

func (x *TestRequest) GetUint32Value() uint32 {
	if x != nil {
		return x.Uint32Value
	}
	return 0
}

func (x *TestRequest) GetEnumValue() Enum {
	if x != nil {
		return x.EnumValue
	}
	return Enum_ENUM_UNKNOWN
}

func (x *TestRequest) GetSfixed32Value() int32 {
	if x != nil {
		return x.Sfixed32Value
	}
	return 0
}

func (x *TestRequest) GetSfixed64Value() int64 {
	if x != nil {
		return x.Sfixed64Value
	}
	return 0
}

func (x *TestRequest) GetSint32Value() int32 {
	if x != nil {
		return x.Sint32Value
	}
	return 0
}

func (x *TestRequest) GetSint64Value() int64 {
	if x != nil {
		return x.Sint64Value
	}
	return 0
}

func (x *TestRequest) GetRepeatedStringValue() []string {
	if x != nil {
		return x.RepeatedStringValue
	}
	return nil
}

func (x *TestRequest) GetRepeatedFloatValue() []float32 {
	if x != nil {
		return x.RepeatedFloatValue
	}
	return nil
}

func (x *TestRequest) GetRepeatedDoubleValue() []float64 {
	if x != nil {
		return x.RepeatedDoubleValue
	}
	return nil
}

func (x *TestRequest) GetRepeatedInt64Value() []int64 {
	if x != nil {
		return x.RepeatedInt64Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedUint64Value() []uint64 {
	if x != nil {
		return x.RepeatedUint64Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedInt32Value() []int32 {
	if x != nil {
		return x.RepeatedInt32Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedFixed64Value() []uint64 {
	if x != nil {
		return x.RepeatedFixed64Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedFixed32Value() []uint32 {
	if x != nil {
		return x.RepeatedFixed32Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedBoolValue() []bool {
	if x != nil {
		return x.RepeatedBoolValue
	}
	return nil
}

func (x *TestRequest) GetRepeatedBytesValue() [][]byte {
	if x != nil {
		return x.RepeatedBytesValue
	}
	return nil
}

func (x *TestRequest) GetRepeatedUint32Value() []uint32 {
	if x != nil {
		return x.RepeatedUint32Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedEnumValue() []Enum {
	if x != nil {
		return x.RepeatedEnumValue
	}
	return nil
}

func (x *TestRequest) GetRepeatedSfixed32Value() []int32 {
	if x != nil {
		return x.RepeatedSfixed32Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedSfixed64Value() []int64 {
	if x != nil {
		return x.RepeatedSfixed64Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedSint32Value() []int32 {
	if x != nil {
		return x.RepeatedSint32Value
	}
	return nil
}

func (x *TestRequest) GetRepeatedSint64Value() []int64 {
	if x != nil {
		return x.RepeatedSint64Value
	}
	return nil
}

func (x *TestRequest) GetJsonnamehandling() string {
	if x != nil {
		return x.Jsonnamehandling
	}
	return ""
}

type TestResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SomeField     string                 `protobuf:"bytes,1,opt,name=some_field,proto3" json:"some_field,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	mi := &file_pkg_sse_proto_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_sse_proto_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_pkg_sse_proto_test_proto_rawDescGZIP(), []int{1}
}

func (x *TestResponse) GetSomeField() string {
	if x != nil {
		return x.SomeField
	}
	return ""
}

var File_pkg_sse_proto_test_proto protoreflect.FileDescriptor

const file_pkg_sse_proto_test_proto_rawDesc = "" +
	"\n" +
	"\x18pkg/sse/proto/test.proto\x12\rpkg.sse.proto\"\xcd\v\n" +
	"\vTestRequest\x12\x1f\n" +
	"\vfloat_value\x18\x01 \x01(\x02R\n" +
	"floatValue\x12!\n" +
	"\fdouble_value\x18\x02 \x01(\x01R\vdoubleValue\x12\x1f\n" +
	"\vint64_value\x18\x03 \x01(\x03R\n" +
	"int64Value\x12!\n" +
	"\fuint64_value\x18\x04 \x01(\x04R\vuint64Value\x12\x1f\n" +
	"\vint32_value\x18\x05 \x01(\x05R\n" +
	"int32Value\x12#\n" +
	"\rfixed64_value\x18\x06 \x01(\x06R\ffixed64Value\x12#\n" +
	"\rfixed32_value\x18\a \x01(\aR\ffixed32Value\x12\x1d\n" +
	"\n" +
	"bool_value\x18\b \x01(\bR\tboolValue\x12!\n" +
	"\fstring_value\x18\t \x01(\tR\vstringValue\x12\x1f\n" +
	"\vbytes_value\x18\n" +
	" \x01(\fR\n" +
	"bytesValue\x12!\n" +
	"\fuint32_value\x18\v \x01(\rR\vuint32Value\x122\n" +
	"\n" +
	"enum_value\x18\f \x01(\x0e2\x13.pkg.sse.proto.EnumR\tenumValue\x12%\n" +
	"\x0esfixed32_value\x18\r \x01(\x0fR\rsfixed32Value\x12%\n" +
	"\x0esfixed64_value\x18\x0e \x01(\x10R\rsfixed64Value\x12!\n" +
	"\fsint32_value\x18\x0f \x01(\x11R\vsint32Value\x12!\n" +
	"\fsint64_value\x18\x10 \x01(\x12R\vsint64Value\x122\n" +
	"\x15repeated_string_value\x18\x11 \x03(\tR\x13repeatedStringValue\x120\n" +
	"\x14repeated_float_value\x18\x12 \x03(\x02R\x12repeatedFloatValue\x122\n" +
	"\x15repeated_double_value\x18\x13 \x03(\x01R\x13repeatedDoubleValue\x120\n" +
	"\x14repeated_int64_value\x18\x14 \x03(\x03R\x12repeatedInt64Value\x122\n" +
	"\x15repeated_uint64_value\x18\x15 \x03(\x04R\x13repeatedUint64Value\x120\n" +
	"\x14repeated_int32_value\x18\x16 \x03(\x05R\x12repeatedInt32Value\x124\n" +
	"\x16repeated_fixed64_value\x18\x17 \x03(\x06R\x14repeatedFixed64Value\x124\n" +
	"\x16repeated_fixed32_value\x18\x18 \x03(\aR\x14repeatedFixed32Value\x12.\n" +
	"\x13repeated_bool_value\x18\x19 \x03(\bR\x11repeatedBoolValue\x120\n" +
	"\x14repeated_bytes_value\x18\x1a \x03(\fR\x12repeatedBytesValue\x122\n" +
	"\x15repeated_uint32_value\x18\x1b \x03(\rR\x13repeatedUint32Value\x12C\n" +
	"\x13repeated_enum_value\x18\x1c \x03(\x0e2\x13.pkg.sse.proto.EnumR\x11repeatedEnumValue\x126\n" +
	"\x17repeated_sfixed32_value\x18\x1d \x03(\x0fR\x15repeatedSfixed32Value\x126\n" +
	"\x17repeated_sfixed64_value\x18\x1e \x03(\x10R\x15repeatedSfixed64Value\x122\n" +
	"\x15repeated_sint32_value\x18\x1f \x03(\x11R\x13repeatedSint32Value\x122\n" +
	"\x15repeated_sint64_value\x18  \x03(\x12R\x13repeatedSint64Value\x12,\n" +
	"\x10jsonnamehandling\x18! \x01(\tR\x12json_name_handling\".\n" +
	"\fTestResponse\x12\x1e\n" +
	"\n" +
	"some_field\x18\x01 \x01(\tR\n" +
	"some_field*0\n" +
	"\x04Enum\x12\x10\n" +
	"\fENUM_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06ENUM_B\x10\x01\x12\n" +
	"\n" +
	"\x06ENUM_C\x10\n" +
	"2P\n" +
	"\vTestService\x12A\n" +
	"\x04Test\x12\x1a.pkg.sse.proto.TestRequest\x1a\x1b.pkg.sse.proto.TestResponse0\x01B,Z*github.com/cfhn/our-space/pkg/sse/proto;pbb\x06proto3"

var (
	file_pkg_sse_proto_test_proto_rawDescOnce sync.Once
	file_pkg_sse_proto_test_proto_rawDescData []byte
)

func file_pkg_sse_proto_test_proto_rawDescGZIP() []byte {
	file_pkg_sse_proto_test_proto_rawDescOnce.Do(func() {
		file_pkg_sse_proto_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_sse_proto_test_proto_rawDesc), len(file_pkg_sse_proto_test_proto_rawDesc)))
	})
	return file_pkg_sse_proto_test_proto_rawDescData
}

var file_pkg_sse_proto_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_sse_proto_test_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_sse_proto_test_proto_goTypes = []any{
	(Enum)(0),            // 0: pkg.sse.proto.Enum
	(*TestRequest)(nil),  // 1: pkg.sse.proto.TestRequest
	(*TestResponse)(nil), // 2: pkg.sse.proto.TestResponse
}
var file_pkg_sse_proto_test_proto_depIdxs = []int32{
	0, // 0: pkg.sse.proto.TestRequest.enum_value:type_name -> pkg.sse.proto.Enum
	0, // 1: pkg.sse.proto.TestRequest.repeated_enum_value:type_name -> pkg.sse.proto.Enum
	1, // 2: pkg.sse.proto.TestService.Test:input_type -> pkg.sse.proto.TestRequest
	2, // 3: pkg.sse.proto.TestService.Test:output_type -> pkg.sse.proto.TestResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pkg_sse_proto_test_proto_init() }
func file_pkg_sse_proto_test_proto_init() {
	if File_pkg_sse_proto_test_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_sse_proto_test_proto_rawDesc), len(file_pkg_sse_proto_test_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_sse_proto_test_proto_goTypes,
		DependencyIndexes: file_pkg_sse_proto_test_proto_depIdxs,
		EnumInfos:         file_pkg_sse_proto_test_proto_enumTypes,
		MessageInfos:      file_pkg_sse_proto_test_proto_msgTypes,
	}.Build()
	File_pkg_sse_proto_test_proto = out.File
	file_pkg_sse_proto_test_proto_goTypes = nil
	file_pkg_sse_proto_test_proto_depIdxs = nil
}
